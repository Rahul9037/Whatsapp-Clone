{"ast":null,"code":"var _jsxFileName = \"/Users/rahulsmac/Documents/reactapp/whatsapp-clone/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport { useStateValue } from '../../contextAPI/StateProvider';\nimport firebase from \"firebase\";\nimport db from '../../firebase';\n\nfunction Chat() {\n  var _messages, _messages$timestamp;\n\n  const [input, setInput] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const {\n    roomId\n  } = useParams();\n  const [seed, setSeed] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapShot => setRoomName(snapShot.data().name));\n      db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapShot => setMessages(snapShot.docs.map(doc => doc.data())));\n    }\n\n    console.log(\"messages\", messages);\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault(); //to sent message\n\n    db.collection('rooms').doc(roomId).collection('messages').add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, roomName), messages.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  }, \"Last message at\", \" \", new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toUTCString()) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachFileIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, messages.map(message => {\n    var _message$timestamp;\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: message,\n      className: `chat__message ${message.name === user.displayName && `chat__reciever`}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, message.name), message.message, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Type a message\",\n    type: \"text\",\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Sent Message\")), /*#__PURE__*/React.createElement(MicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rahulsmac/Documents/reactapp/whatsapp-clone/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","AttachFileIcon","MoreVertIcon","SearchIcon","EmojiEmotionsIcon","MicIcon","useParams","useStateValue","firebase","db","Chat","input","setInput","roomName","setRoomName","roomId","seed","setSeed","messages","setMessages","user","dispatch","Math","floor","random","collection","doc","onSnapshot","snapShot","data","name","orderBy","docs","map","console","log","sendMessage","e","preventDefault","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","length","Date","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport { useStateValue } from '../../contextAPI/StateProvider';\nimport firebase from \"firebase\";\nimport db from '../../firebase';\n\nfunction Chat() {\n\n    const [input, setInput] = useState('');\n    const [roomName, setRoomName] = useState('');\n    const { roomId } = useParams();\n    const [seed, setSeed] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [{user} , dispatch] = useStateValue();\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId])\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection('rooms').doc(roomId)\n                .onSnapshot(\n                    snapShot => (setRoomName(snapShot.data().name))\n                )\n            db.collection('rooms').doc(roomId).collection('messages')\n                .orderBy('timestamp', 'asc').onSnapshot(\n                    snapShot => (setMessages(snapShot.docs.map\n                        (doc => doc.data())\n                    )))\n        }\n        console.log(\"messages\" , messages)\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        //to sent message\n        db.collection('rooms').doc(roomId)\n        .collection('messages').add({\n            message : input,\n            name: user.displayName,\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        setInput('');\n    }\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    {messages.length > 0 ? (<p>Last message at{\" \"}\n                        {new Date( messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}\n                    </p>) : null}\n                </div>\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchIcon />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFileIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {messages.map(message => \n                    (<p key={message} className={`chat__message ${message.name === user.displayName && `chat__reciever`}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                            {message.message}\n                        <span className=\"chat__timestamp\">\n                            {\n                                new Date(message.timestamp?.toDate()).toUTCString()\n                            }\n                        </span>\n                    </p>))}\n\n            </div>\n            <div className=\"chat__footer\">\n                <EmojiEmotionsIcon />\n                <form>\n                    <input onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" value={input} />\n                    <button type=\"submit\" onClick={sendMessage}>Sent Message</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}